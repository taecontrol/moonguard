<?php

use Taecontrol\Larastats\Enums\UptimeStatus;
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateLarastatsTables extends Migration {
    public function up()
    {
        Schema::create('sites', function (Blueprint $table) {
            $table->id();

            $table->string('url')->unique();
            $table->string('name');
            $table->boolean('uptime_check_enabled')->default(true);
            $table->boolean('ssl_certificate_check_enabled')->default(true);
            $table->unsignedInteger('max_request_duration_ms')->default(1000);
            $table->timestamp('down_for_maintenance_at')->nullable();
            $table->string('api_token', 60)->nullable();

            $table->timestamps();
        });

        Schema::create('uptime_checks', function (Blueprint $table) {
            $table->id();

            $table->string('look_for_string')->default('');
            $table->string('status')->default(UptimeStatus::NOT_YET_CHECKED->value);
            $table->text('check_failure_reason')->nullable();
            $table->integer('check_times_failed_in_a_row')->default(0);
            $table->timestamp('status_last_change_date')->nullable();
            $table->timestamp('last_check_date')->nullable();
            $table->timestamp('check_failed_event_fired_on_date')->nullable();
            $table->integer('request_duration_ms')->nullable();
            $table->string('check_method')->default('get');
            $table->text('check_payload')->nullable();
            $table->text('check_additional_headers')->nullable();
            $table->string('check_response_checker')->nullable();

            $table->foreignIdFor(config('larastats.site.model'))
                ->constrained()
                ->onDelete('cascade');

            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::table('uptime_checks', function (Blueprint $table) {
            $table->dropForeignIdFor(config(larastats.site.model));
        });

        Schema::dropIfExists('uptime_checks');

        Schema::dropIfExists('sites');
    }
};
